import org.gradle.api.plugins.jetty.internal.Monitor

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'
// Directory where the restful API doc is generated
ext.restDocRootDir = "${buildDir}/restdoc" 
ext.restDocOutputDir = "${restDocRootDir}"

apply plugin: 'maven-publish'
apply plugin: 'em-test-infra'


jar.archiveName='emcpssf_qa_test.jar'
group = 'com.oracle.emaas.emcpssf'
version = '1.0.1'


buildscript {
    repositories {
        maven {
            url = "${artifactory_contextUrl}/repo"
        }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'testinfra', version: "${testinfraVersion}", transitive: true
		
        
}  
}

repositories {
    maven {
        url = "${artifactory_contextUrl}/repo"
    }
}

configurations {
	integTestCompile.extendsFrom testCompile
	integTestRuntime.extendsFrom testRuntime
	restDoc
	enunciateCore
	ftpAntTask
}

war.archiveName "savedsearch-web.war"

war {
	from('src/main/java') { 
		include '**/*.properties'
		into('WEB-INF/classes') 
	}
        from('src/main/java') {
                include '**/*.xsd'
                into('WEB-INF/classes')
        }
	from('WebContent/WEB-INF') {
                include '**/web.xml'
                into('WEB-INF')
        }

}

sourceSets {


			    integTest {
      				java.srcDir 'src/integTest/java'
				resources.srcDir file('src/integTest/resources')
				compileClasspath = configurations.lrgConfig 
    }


}
task integTestJar (type:Jar) {
    from sourceSets.integTest.output
    appendix = 'integ-tests'

}


publishing {
    publications {
/*
        savedsearchWeb(MavenPublication) {
              from components.java
        }
*/
        integTest(MavenPublication) {
            setArtifactId(project.name + '-' + integTestJar.appendix)
            artifact integTestJar.archivePath
            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.lrgConfig.getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
		    if (it.moduleVersion != 'unspecified') {
                        println "VERSION for ${it.moduleName} = ${it.moduleVersion}"
                        dependency.appendNode('version', it.moduleVersion)
                    }
		    else {
                        dependency.appendNode('version', '')

	            }
                }
            }
        }
    }
    repositories {
        maven {
            url "${artifactory_contextUrl}/${artifactory_repoKey}"
            credentials {
                username = "${artifactory_user}"
                password =  "${artifactory_password}"
            }
        }
    }
}
//task runQATestSuite(type: Test){
//        useTestNG(){
//        dependsOn ':savedsearch-ear:ear'
//        useDefaultListeners = true
//        outputDirectory = file("$buildDir/testngoutput")
//        suites file('testngsuite.xml')
//        }
//}

/**
 * Generates documentation for the REST service API
 */  
task restDoc {
 
    // Configure task input and output to not generate the doc again when the 
    // source file have not changed
    inputs.files 'src/main/java/oracle/sysman/emSDK/emaas/platform/savedsearch/ws/rest',  'src/main/java/oracle/sysman/emSDK/emaas/platform/savedsearch/ws/navigation'
    outputs.dir restDocOutputDir
}
restDoc << {
    
    // Declare the enunciate ant task
    ant.taskdef (name: 'enunciate', 
        classname: 'org.codehaus.enunciate.main.EnunciateTask',
        classpath: configurations.enunciateCore.asPath)
    
    // Make the directory to store enunciate output
    ant.mkdir(dir: "${restDocOutputDir}")

    // Define classpath for running enunciate
    ant.path(id:'enunciateRuntimePath') {
        pathelement(path: configurations.restDoc.asPath)
    }  

    // Run the enunciate task
    ant.enunciate(basedir: 'src/main/java/oracle/sysman/emSDK/emaas/platform/savedsearch/ws/',
            classpathRef: 'enunciateRuntimePath',
            verbose: 'true', 
            debug: 'true', 
            configFile: 'enunciate.xml',
            javacSourceVersion: '7') {
        
        include(name: '**/*.java')
	exclude(name: '*/exception')
        export(artifactId: 'docs', destination: restDocOutputDir)
        javacArgument(argument: '-g')
    }	
}

/**
 * FTP the REST API document to the ftp server
 */

task ftpRestDoc << {
		ant {
			taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)
			ftp(server: ftpserver, userid: username, password: password, remotedir: remote_restdoc_dir) {
				fileset(dir: "${restDocOutputDir}")
			}
		}
	}

//sourceSets {
//                            test{
//                                java {
//                                          srcDirs = ['src/test/java']
//                                }
//                                resources.srcDirs = ['src/test/java']
//                           }
// }
dependencies {
	providedCompile project(':savedsearch-entities')
	providedCompile project(':savedsearch-core')  
	providedCompile(group: 'javax.servlet', name:'servlet-api', version:'2.5')
	providedCompile(group: 'javax', name: 'ejb', version: '3.2.0')
	providedCompile(group: 'com.sun.jersey', name: 'jersey-client', version: '1.17')
	providedCompile(group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.17.1')
	providedCompile(group: 'org.codehaus.jettison', name: 'jettison', version: '1.1')
	providedCompile(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0')

	providedCompile(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.1')
	providedCompile(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.12')
	providedCompile(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2')
	
	providedCompile(group: 'org.apache.commons', name:'commons-lang3', version:'3.1')
	providedCompile(group: 'org.hamcrest', name:'hamcrest-core', version: '1.3')
	providedCompile(group: 'org.apache.httpcomponents', name:'httpclient', version:'4.3.1')
	providedCompile(group: 'org.apache.httpcomponents', name:'httpcore', version:'4.3')
	providedCompile(group: 'org.apache.httpcomponents', name:'httpmime', version:'4.3.1')
	
	providedCompile(group: 'org.testng', name:'testng', version:'6.8.8')
	providedCompile(group: 'org.codehaus.groovy', name:'groovy-all', version:'2.2.1')
	
	providedCompile(group: 'com.jayway.restassured', name:'json-path', version:'1.8.1')
	providedCompile(group: 'com.jayway.restassured', name:'xml-path', version:'1.9.0')
	providedCompile(group: 'com.jayway.restassured', name:'rest-assured-common', version:'2.3.1')
	providedCompile(group: 'com.jayway.restassured', name:'rest-assured', version:'2.3.1')
        providedCompile(group: 'com.oracle.emaas', name: 'emaas-platform-tenant-sdk', version: '0.1')	


lrgConfig project(':savedsearch-web') 
	lrgConfig project(':savedsearch-entities')
	lrgConfig project(':savedsearch-core')  
	lrgConfig(group: 'javax.servlet', name:'servlet-api', version:'2.5')
	lrgConfig(group: 'javax', name: 'ejb', version: '3.2.0')
	lrgConfig(group: 'com.sun.jersey', name: 'jersey-client', version: '1.17')
	lrgConfig(group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.17.1')
	lrgConfig(group: 'org.codehaus.jettison', name: 'jettison', version: '1.1')
	lrgConfig(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0')

	lrgConfig(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.1')
	lrgConfig(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.12')
	lrgConfig(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2')
	
	lrgConfig(group: 'org.apache.commons', name:'commons-lang3', version:'3.1')
	lrgConfig(group: 'org.hamcrest', name:'hamcrest-core', version: '1.3')
	lrgConfig(group: 'org.apache.httpcomponents', name:'httpclient', version:'4.3.1')
	lrgConfig(group: 'org.apache.httpcomponents', name:'httpcore', version:'4.3')
	lrgConfig(group: 'org.apache.httpcomponents', name:'httpmime', version:'4.3.1')
	
	lrgConfig(group: 'org.testng', name:'testng', version:'6.8.8')
	lrgConfig(group: 'org.codehaus.groovy', name:'groovy-all', version:'2.2.1')
	
	lrgConfig(group: 'com.jayway.restassured', name:'json-path', version:'1.8.1')
	lrgConfig(group: 'com.jayway.restassured', name:'xml-path', version:'1.9.0')
	lrgConfig(group: 'com.jayway.restassured', name:'rest-assured-common', version:'2.3.1')
	lrgConfig(group: 'com.jayway.restassured', name:'rest-assured', version:'2.3.1')
        lrgConfig(group: 'com.oracle.emaas', name: 'emaas-platform-tenant-sdk', version: '0.1')



	enunciateCore 'org.codehaus.enunciate:enunciate-core:1.28'
	restDoc(
		[group: 'org.codehaus.enunciate', name: 'enunciate-core-rt', version: '1.28'],
		[group: 'org.codehaus.enunciate', name: 'enunciate-core', version: '1.28'],
		[group: 'org.codehaus.enunciate', name: 'enunciate-docs', version: '1.28'],
		[group: 'org.codehaus.enunciate', name: 'enunciate-core-annotations', version: '1.28'],
		[group: 'com.oracle.weblogic', name: 'jersey-core-1.17.1', version: '12.1.2-0-0'],
		[group: 'com.sun.jersey', name: 'jersey-server', version: '1.17'],
		[group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.17']		
	)
	ftpAntTask('org.apache.ant:ant-commons-net:1.8.4') {
			module('commons-net:commons-net:1.4.1') {
				dependencies 'oro:oro:2.0.8:jar'
			}
		}
 }
artifactoryPublish {
	publications('integTest')
}
build.dependsOn integTestJar
