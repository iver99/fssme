                               
buildscript {
    repositories {
        maven {  
            url = "${PUB_MAVEN_MY_MAVEN_REPO}"
        }                                    
        maven {                              
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
        }                                                                  
    }                                                                      
    dependencies { 
         classpath group: "com.oracle.emaas.emdi", name: "DevInfraPlugin", version: "${devinfraVersion}", transitive: true
         classpath group: "com.oracle.emaas.emdi", name: "TestInfraPlugin", version: "${testinfraVersion}", transitive: true
        classpath group: "com.oracle.omc.omctf.testsdk", name: "omctf_commontasks", version: "${omctfVersion}"                
	classpath group: "com.oracle.omc.omctf.testsdk", name: "omctf_taskprocessor", version: "${omctfVersion}"  
    }                                                                                                                         
}  
apply from: 'setup.gradle'
apply plugin: 'DevInfraPlugin'                                                                                                
apply plugin: 'TestInfraPlugin'                                                                                               
apply from: getAbsoluteFilePath(project.buildscript.configurations.classpath,"omctf_commontasks")                             
import com.oracle.emdi.gradle.testinfra.tasks.EMTest     
apply from: getAbsoluteFilePath(project.buildscript.configurations.classpath,"omctf_taskprocessor")                                                                     
repositories {
    maven {  
        url = "${PUB_MAVEN_MY_MAVEN_REPO}"
    }                                    
    maven {                              
        url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
    }                                                                  
}                                                                      
/******* ExtraProperties declaration ******/

dependencies {
    //testConfig group: 'com.oracle.emaas.emcpssf.test', name:'savedsearch-upgrade-tests-integ-tests', version: "${REPO_BID}"
   testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-web-integ-tests', version: "${REPO_BID}"){ exclude('module':'groovy') }
    testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-web', version: "${REPO_BID}") {transitive = false}
	testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-core', version: "${REPO_BID}") {transitive = false}
	testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-entities', version: "${REPO_BID}") {transitive = false}

    testConfig group: 'com.oracle.emaas.emcpssf.test', name:'savedsearch-web-integ-tests', version: "${REPO_BID}"
   testConfig group: 'com.oracle.emaas.emcpssf.test', name:'savedsearch-core-integ-tests', version: "${REPO_BID}"
   testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-entities', version: "${REPO_BID}") {transitive = false}
    testConfig(group: 'com.oracle.jdbc', name: 'ojdbc6', version: '12.1.0.1.0'){transitive = false}
	testConfig(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1'){ transitive = false }
	testConfig(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1'){ transitive = false }
	testConfig(group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.0.5'){ transitive = false }
	testConfig(group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2') { transitive = false }
	testConfig(group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2'){ transitive = false }
	testConfig(group: 'org.codehaus.jettison', name: 'jettison', version: '1.3.4'){ transitive = false } 
        testConfig(group: 'javax.servlet', name:'servlet-api', version:'2.5'){ transitive = false }
	testConfig(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'){ transitive = false }
   	
    
  configurations{
		restAssured.exclude module: 'groovy'
	}
 
}

//Add data population(pre-upgrade) tests or tasks here
//task omcUpgradeDataPopulation (type: EMTest, overwrite: true){
task pre_upgrade (type: EMTest, dependsOn: omcSetup){
println "Customizing the UpgradeDataPopulation"
  options.suiteXmlBuilder().suite('name': 'PreUpg') {
           test('name': 'pre_upg') {
               classes([:]) {
                      'class'('name':'oracle.sysman.emSDK.emaas.platform.savedsearch.test.upgrade.CategoryCRUDBeforeUpgradeTest')
          
             
   }
   }
 }



    useWebdriver = true
    useRestAssured = true
   
}

//task omcUpgradeDataValidation  (type: EMTest, overwrite: true){

task post_upgrade (type: EMTest, dependsOn: [omcCloudUpgrade,omcTenantAgentSetup]){

    println "Overriding the UpgradeDataValidation"
       options.suiteXmlBuilder().suite('name': 'PostUpg') {
        test('name': 'post_upg') {
            classes([:]) {
                   'class'('name':'oracle.sysman.emSDK.emaas.platform.savedsearch.test.upgrade.FolderCRUDAfterUpgradeTest')
} 
	               
	    }
	    }

 
    useWebdriver = true
    useRestAssured = true

}

post_upgrade.mustRunAfter pre_upgrade
omcTeardown.mustRunAfter ([pre_upgrade,post_upgrade])

task emcpssf_upgrade_test_3n (dependsOn:[pre_upgrade,post_upgrade,omcTeardown]){
    apply from: getAbsoluteFilePath(project.buildscript.configurations.classpath,"omctf_taskprocessor")
    //apply from: getAbsoluteFilePath("omctf_taskprocessor")
}


