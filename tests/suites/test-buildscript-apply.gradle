/* Copyright (c) 2016 Oracle and/or its affiliates. All rights reserved.*/

/*
   DESCRIPTION
     Common buildscript to be applied for all lrgs.

   MODIFIED MM/DD/YY
   skuchero 03/05/17 - improve error message in CBF template code
   skuchero 02/15/17 - add cygwin support to CBF template code
   skuchero 11/21/16 - Update CBF template code
   skgupta  02/11/16 - Creation
*/

//-----------------------------------------------------------------------------
// Enable this to be a rootProject which uses project common files.
//
// Configure the project classpath to enable applying plugins,
// and define some global project properties and methods.
// -- gradle runs the buildscript block first during the configuration phase
//
buildscript {
  if (System.env.BRANCH_TOP_DIR) {
    project.ext.commonBranchTopDir = System.env.BRANCH_TOP_DIR
  } else {
    if ( ! project.hasProperty('PUB_SHELL') || ! project.PUB_SHELL) {
      project.ext.PUB_SHELL = System.env.PUB_SHELL ?: "bash"
    }
    def command = null
    if ( ! System.env.APM_CYGWIN) {
      command = "cd '$project.rootDir' && git rev-parse --show-toplevel"
    } else {
      // cygwin support: convert to a windows path
      command = "cd '$project.rootDir' && cygpath -w `git rev-parse --show-toplevel`"
    }
    def stdout = new StringBuilder(); def stderr = new StringBuilder(); def exitCode = 1
    try {
      def proc = new ProcessBuilder("$project.PUB_SHELL", "-c", command).start()
      proc.waitForProcessOutput(stdout, stderr); exitCode = proc.exitValue()
    } catch (Exception e) { stderr << e.message }
    if (exitCode) {
      throw new GradleException(
        "[ERROR] $project.PUB_SHELL or git command is not found or $project.rootDir is not a git project dir\n" +
        "[Note] If the git command is not found, env variables BRANCH_TOP_DIR and BRANCH_NAME must be set\n" +
        "[Note] Setting the PUB_SHELL property or env variable will override the default PUB_SHELL=bash\n" +
        "[Command] $project.PUB_SHELL -c \"$command\"\n" + "[Error] $stderr")
    } else {
      project.ext.commonBranchTopDir = "$stdout".trim()
    }
  }
  apply from: "$project.commonBranchTopDir/common/scripts/buildscript-apply-delegate.gradle"
}
//-----------------------------------------------------------------------------

