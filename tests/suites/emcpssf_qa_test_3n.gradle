/* Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.*/
/*
 * DESCRIPTION
 *     <<description here>>
 *
 * PRIVATE CLASSES
 *     NONE
 *
 * NOTES
 *    <other useful comments, qualifications, etc.>
 *
 * MODIFIED    (MM/DD/YY)
 *   << file history here >>
 *
 */
/* *************************************************************************************************
 *                   BEGIN TEST-INFRA-BLOCK
 ***************************************************************************************************
 * DO NOT EDIT THE LINES BELOW. PLEASE ADD YOUR LRG SPECIFIC CODE AFTER
 * THE LINE "END OF TEST-INFRA-BLOCK
 */
/**
 * Run the buildscript{} configuration to pull the em-test-infraplugin.
 */
buildscript {
    repositories {

        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'TestInfraPlugin', version: "${testinfraVersion}", transitive: true
    }
}
repositories {
    maven {
        url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
    }
}
apply plugin: 'TestInfraPlugin'
import com.oracle.emdi.gradle.testinfra.tasks.EMTest;
/* ************************************************************************************************
 *                   END OF TEST-INFRA-BLOCK
 ***************************************************************************************************/
 
 
/* Your lrg specific code would come here */
repositories {
maven {
        url = "${PUB_MAVEN_MY_MAVEN_REPO}"
    }
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
dependencies {
	testConfig group: 'com.oracle.emdi.test', name: 'emaas_smalldeployment', version: "${integDeployVersion}"
	
	testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-web-integ-tests', version: "${REPO_BID}"){ exclude('module':'groovy') }
	testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-web', version: "${REPO_BID}") {transitive = false}
	testConfig (group: 'com.oracle.emaas.emcpssf.test', name: 'savedsearch-entities', version: "${REPO_BID}") {transitive = false}

	
	testConfig(group: 'javax.servlet', name:'servlet-api', version:'2.5'){ transitive = false }
	testConfig(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'){ transitive = false }
	testConfig(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1'){ transitive = false }
  testConfig(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1'){ transitive = false }
  testConfig(group: 'com.oracle.emaas', name: 'emaas-platform-tenant-sdk', version: '0.2'){ transitive = false }

	configurations{
		restAssured.exclude module: 'groovy'
	}
}


task small_deploy_3n_block(type: EMTest) {
    onlyIf {!System.env.SMALLDEPLOY_IGNORESETUP}
    options.suiteXmlBuilder().suite('name': 'lrgemcpdf_dev_test_3n') {
        test('name': 'emaas_setup_small_deploy') {
            classes([:]) {
                'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSmallDeploy3n') {
                    methods([:]) {
                        'include' ('name': 'setupEmaasSmallDeploy')
                    }
                }
        //      'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSanityTests')
            }
        }
    }
    useWebdriver = true
    useRestAssured = true
}


     task QATest(type:EMTest,dependsOn: small_deploy_3n_block){
 include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/category/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/common/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/exception/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/folder/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/importsavedsearch/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/navigations/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/search/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/util/*"
include "oracle/sysman/emSDK/emaas/platform/savedsearch/test/widget/*"
//useWebdriver = true

// include "oracle.sysman.emSDK.emaas.platform.savedsearch.ws.*"
        useRestAssured=true
ext.set("testType", "integration")
}
task small_deploy_3n_cleanup(type: EMTest) {
    onlyIf {!System.env.SMALLDEPLOY_IGNORESETUP}
    options.suiteXmlBuilder().suite('name': 'lrgemctas_uitsts_3n') {
        test('name': 'emaas_setup_small_deploy') {
            classes([:]) {
                'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSmallDeploy3n') {
                    methods([:]) {
                        'include' ('name': 'logCollectionAndPostCleanup')
                    }
                }
            }
        }
    }
 mustRunAfter ([small_deploy_3n_block,QATest])
}

task emcpssf_qa_test_3n (dependsOn: [QATest, small_deploy_3n_cleanup])

