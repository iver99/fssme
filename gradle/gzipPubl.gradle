/**  
* Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.  
*  
* DESCRIPTION
* The build script for publish zgip generated files in GAV format,
* required by promotion pipeline.
*
* TO RUN:
*      gradle -b gzipPubl -PzipName=[xxx], 
*                                   where xxx - the name of the zip file,
*                                   usually - the git repo name
*
* 
* MODIFIED    (MM/DD/YY)
*  Alla Shamis       08/05/14 - Creation
*/


//need pass the parameter - the Hudson can't resolve correct 'rootProject.name'
def zipNameCur = hasProperty('zipName') ? zipName : rootProject.name
 
 
 
allprojects {
	apply plugin: 'artifactory'
	apply plugin: 'gavsetting'
	apply plugin: 'maven-publish'  
	
	artifactory {
        contextUrl =  "http://artifactory.oraclecorp.com/artifactory"
		publish {
			repository {
				repoKey = 'emaas-test-sandbox-local'   //can be redefined in Hudson configuration
				username = "${artifactory_user}"
				password = "${artifactory_password}"
			}
			
        }
        resolve {
                repository {
					repoKey = 'repo'
					username = "${artifactory_user}"
					password = "${artifactory_password}"
					maven = true
			}
        }
	} 
 }
 
//required in order to use artifactory plugin
buildscript {

        repositories {
                mavenLocal()
                maven {
                        url = "${artifactory_contextUrl}" + '/repo'
                        credentials {
                                username = "${artifactory_user}"
                                password = "${artifactory_password}"
                        }
                }
                mavenCentral()
        }

        dependencies {
			classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.1.0'
			classpath (group: 'com.oracle.emaas.emdi', name: 'GAVPlugin', version: '1.0.0+')
        }
}

 
subprojects {
	apply plugin: 'distribution'  //provide task distZip, that using for zip creation
	group = project.group + zipNameCur 
	distributions {
		main {
			contents {
				from ('dist') {
					include '*.tar.gz'
				}
			}	
		}
	}

	artifacts {
		archives file: distZip.archivePath, name: project.name, type: 'zip', extension: 'zip'
	}
}