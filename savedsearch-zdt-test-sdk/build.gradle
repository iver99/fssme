apply from:'test.gradle'
def emcpsrvsSDKVer = getDependentSdkVersion('com.oracle.emaas.emcpsrvs.sdk', 'emaas-platform-tenant-sdk', '2.0.+')

ext.customPomDefinition = {
    def dependencies = asNode().appendNode('dependencies')
    configurations.testConfig.allDependencies.each { dep ->
        if (dep.name != 'unspecified') {
            def dependency = dependencies.appendNode('dependency')
            dependency.appendNode('groupId', dep.group)
            dependency.appendNode('artifactId', dep.name)
            dependency.appendNode('version', dep.version)
        }
    }
}

project.publishing.publications {
   
     integTest(MavenPublication) {
                setArtifactId(project.name+ '-' + integTestJar.appendix)
                setGroupId project.publishGroup
                artifact integTestJar.archivePath
		pom.withXml customPomDefinition
        }
    
        zdtTasksPub(MavenPublication) {
            // The group name of the artifact should start as com.oracle.emaas.emcpssf.testsdk (where repoName is the name of the git  repository where the plugin source exist)
            setGroupId(project.zdtTasksGroup)
            setVersion(project.zdtTasksVersion + '-' + project.buildTimestamp)
            setArtifactId("emcpssf_zdtTasksSdk")
            artifact("gradle-sdk/emcpssf_zdtTasksSdk.gradle"){
                extension "gradle"
            }
        }
    }






artifactoryPublish{
    publications('zdtTasksPub')
     publications('integTest')
}
dependencies {
	compile (project(':savedsearch-entities')) // {transitive = false}
	compile (project(':savedsearch-core')) // {transitive = false}
	compile (project(':savedsearch-web-utils')) // {transitive = false}
	
	//compile(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'){transitive = false}
	compile(group: 'com.oracle.adf', name: 'wls-api', version: '12.1.2-0-0')
	compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-lookup-client', version: '1.+') 
	compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-client', version: '1.+') 
	
	compile(group: 'javax.servlet', name:'servlet-api', version:'2.5'){transitive = false}
	compile(group: 'com.sun.jersey', name: 'jersey-client', version: '1.17')
	compile(group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.17.1') { transitive = false }
	compile(group: 'org.codehaus.jettison', name: 'jettison', version: '1.3.4'){transitive = false}
	
	compile(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1'){transitive = false}
	compile(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1'){transitive = false}

	compile(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'){transitive = false}
	compile(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'){transitive = false}
	compile(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2'){transitive = false}
	
	compile(group: 'org.apache.commons', name:'commons-lang3', version:'3.1'){transitive = false}
	compile(group: 'org.hamcrest', name:'hamcrest-core', version: '1.3'){transitive = false}
	compile(group: 'org.apache.httpcomponents', name:'httpclient', version:'4.3.1'){transitive = false}
	compile(group: 'org.apache.httpcomponents', name:'httpcore', version:'4.3'){transitive = false}
	compile(group: 'org.apache.httpcomponents', name:'httpmime', version:'4.3.1'){transitive = false}
	compile configurations.testNG
	compile configurations.webdriver
	compile configurations.restAssured

	compile(group: 'org.codehaus.groovy', name:'groovy-all', version:'2.2.1'){transitive = false}
	
	compile(group: 'com.oracle.emaas.emcpsrvs.sdk', name: 'emaas-platform-tenant-sdk', version: emcpsrvsSDKVer) {
		exclude group: 'emaas.platform', module: 'registry-lookup-client'
		exclude group: 'emaas.platform', module: 'registry-client'
	}
	
 }
check.dependsOn integTestJar

