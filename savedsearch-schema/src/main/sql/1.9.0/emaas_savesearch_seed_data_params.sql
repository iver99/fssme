REM 	Copyright (c) 2013, 2014, 2015, 2016, Oracle and/or its affiliates. 
REM    	DESCRIPTION
REM      MERGE DATA FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH
REM      MERGE DATA FROM EMS_ANALYTICS_CATEGORY_PARAMS TO EMS_ANALYTICS_CATEGORY
REM
REM    NOTES
REM      NONE
REM
REM    MODIFIED   (MM/DD/YY)
REM    CHHAO     07/04/16 
REM

DEFINE TENANT_ID ='&1'
SET FEEDBACK ON
SET SERVEROUTPUT ON
DECLARE
  v_count     INTEGER;
BEGIN
	--CHECK IF THE DATA IN 'EMS_ANALYTICS_SEARCH' HAS BEEN IMPORTED.
	SELECT count(1) into v_count FROM EMS_ANALYTICS_SEARCH WHERE WIDGET_KOC_NAME <>'0' AND TENANT_ID = '&TENANT_ID';
	IF (v_count <= 0)  THEN
		--MERGE "NAME_WIDGET_SOURCE" INTO EMS_ANALYTICS_SEARCH.NAME_WIDGET_SOURCE
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.NAME_WIDGET_SOURCE');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='NAME_WIDGET_SOURCE') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.NAME_WIDGET_SOURCE=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_GROUP_NAME" INTO EMS_ANALYTICS_SEARCH.WIDGET_GROUP_NAME
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_GROUP_NAME');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_GROUP_NAME') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_GROUP_NAME=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_SCREENSHOT_HREF" INTO EMS_ANALYTICS_SEARCH.WIDGET_SCREENSHOT_HREF
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_SCREENSHOT_HREF');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_SCREENSHOT_HREF') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_SCREENSHOT_HREF=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_ICON" INTO EMS_ANALYTICS_SEARCH.WIDGET_ICON
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_ICON');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_ICON') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_ICON=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_KOC_NAME" INTO EMS_ANALYTICS_SEARCH.WIDGET_KOC_NAME
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_KOC_NAME');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_KOC_NAME') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_KOC_NAME=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_VIEWMODEL" INTO EMS_ANALYTICS_SEARCH.WIDGET_VIEWMODEL
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_VIEWMODEL');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_VIEWMODEL') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_VIEWMODEL=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_TEMPLATE" INTO EMS_ANALYTICS_SEARCH.WIDGET_TEMPLATE
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_TEMPLATE');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_TEMPLATE') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_TEMPLATE=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_SUPPORT_TIME_CONTROL" INTO EMS_ANALYTICS_SEARCH.WIDGET_SUPPORT_TIME_CONTROL
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_SUPPORT_TIME_CONTROL');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_SUPPORT_TIME_CONTROL') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_SUPPORT_TIME_CONTROL=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_LINKED_DASHBOARD" INTO EMS_ANALYTICS_SEARCH.WIDGET_LINKED_DASHBOARD
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_LINKED_DASHBOARD');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_LINKED_DASHBOARD') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_LINKED_DASHBOARD=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_DEFAULT_WIDTH" INTO EMS_ANALYTICS_SEARCH.WIDGET_DEFAULT_WIDTH
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_DEFAULT_WIDTH');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_DEFAULT_WIDTH') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_DEFAULT_WIDTH=T2.PARAM_VALUE_STR;
		
		--MERGE "WIDGET_DEFAULT_HEIGHT" INTO EMS_ANALYTICS_SEARCH.WIDGET_DEFAULT_HEIGHT
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.WIDGET_DEFAULT_HEIGHT');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_DEFAULT_HEIGHT') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.WIDGET_DEFAULT_HEIGHT=T2.PARAM_VALUE_STR;
		
		--MERGE "DASHBOARD_INELIGIBLE" INTO EMS_ANALYTICS_SEARCH.DASHBOARD_INELIGIBLE
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.DASHBOARD_INELIGIBLE');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='DASHBOARD_INELIGIBLE') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.DASHBOARD_INELIGIBLE=T2.PARAM_VALUE_STR;
		
		--MERGE "PROVIDER_NAME" INTO EMS_ANALYTICS_SEARCH.PROVIDER_NAME
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.PROVIDER_NAME');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='PROVIDER_NAME') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.PROVIDER_NAME=T2.PARAM_VALUE_STR;
		
		--MERGE "PROVIDER_VERSION" INTO EMS_ANALYTICS_SEARCH.PROVIDER_VERSION
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.PROVIDER_VERSION');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='PROVIDER_VERSION') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.PROVIDER_VERSION=T2.PARAM_VALUE_STR;
		
		--MERGE "PROVIDER_ASSET_ROOT" INTO EMS_ANALYTICS_SEARCH.PROVIDER_ASSET_ROOT
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_SEARCH_PARAMS TO EMS_ANALYTICS_SEARCH.PROVIDER_ASSET_ROOT');
		MERGE INTO EMS_ANALYTICS_SEARCH T1 USING (SELECT * FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='PROVIDER_ASSET_ROOT') T2 ON (T1.SEARCH_ID=T2.SEARCH_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.PROVIDER_ASSET_ROOT=T2.PARAM_VALUE_STR;
		
	ELSE
		DBMS_OUTPUT.PUT_LINE('Schema object: DATA HAS BEEN IMPORTED INTO EMS_ANALYTICS_SEARCH_PARAMS ALREADY FOR TENANT:&TENANT_ID,NO FURTHER ACTION IS NEEDED!');
	END IF;
	
	--merge data from category_param table to category table
	
	--CHECK IF  THE DATA IN 'EMS_ANALYTICS_CATEGORY' HAS BEEN IMPORTED.
	SELECT count(1) into v_count FROM EMS_ANALYTICS_CATEGORY where DASHBOARD_INELIGIBLE <>'0' AND TENANT_ID = '&TENANT_ID';
	IF (v_count <= 0)  THEN
		--MERGE "DASHBOARD_INELIGIBLE" INTO EMS_ANALYTICS_CATEGORY.DASHBOARD_INELIGIBLE
		DBMS_OUTPUT.PUT_LINE('MERGE ROWS FOR TENANT:&TENANT_ID FROM EMS_ANALYTICS_CATEGORY_PARAMS TO EMS_ANALYTICS_CATEGORY.DASHBOARD_INELIGIBLE');
		MERGE INTO EMS_ANALYTICS_CATEGORY T1 USING (SELECT * FROM EMS_ANALYTICS_CATEGORY_PARAMS WHERE NAME='DASHBOARD_INELIGIBLE') T2 ON (T1.CATEGORY_ID=T2.CATEGORY_ID AND T1.TENANT_ID=T2.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHEN MATCHED THEN UPDATE SET T1.DASHBOARD_INELIGIBLE=T2.PARAM_VALUE;
		
	ELSE
		DBMS_OUTPUT.PUT_LINE('Schema object: DATA HAS BEEN IMPORTED INTO EMS_ANALYTICS_CATEGORY ALREADY FOR TENANT:&TENANT_ID,NO FURTHER ACTION IS NEEDED!');
	END IF;
	
	SELECT count(1) into v_count FROM EMS_ANALYTICS_SEARCH_PARAMS WHERE NAME='WIDGET_KOC_NAME' AND TENANT_ID = '&TENANT_ID';
	IF (v_count > 0)  THEN
	--delete old data in EMS_ANALYTICS_SEARCH_PARAMS and EMS_ANALYTICS_CATEGORY_PARAMS
	DBMS_OUTPUT.PUT_LINE('DELETE NAME_WIDGET_SOURCE DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='NAME_WIDGET_SOURCE' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='NAME_WIDGET_SOURCE');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_GROUP_NAME DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_GROUP_NAME' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_GROUP_NAME');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_SCREENSHOT_HREF DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_SCREENSHOT_HREF' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_SCREENSHOT_HREF');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_ICON DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_ICON' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_ICON');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_KOC_NAME DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_KOC_NAME' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_KOC_NAME');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_VIEWMODEL DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_VIEWMODEL' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_VIEWMODEL');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_TEMPLATE DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_TEMPLATE' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_TEMPLATE');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_SUPPORT_TIME_CONTROL DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_SUPPORT_TIME_CONTROL' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_SUPPORT_TIME_CONTROL');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_LINKED_DASHBOARD DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_LINKED_DASHBOARD' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_LINKED_DASHBOARD');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_DEFAULT_WIDTH DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_DEFAULT_WIDTH' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_DEFAULT_WIDTH');
	
	DBMS_OUTPUT.PUT_LINE('DELETE WIDGET_DEFAULT_HEIGHT DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='WIDGET_DEFAULT_HEIGHT' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='WIDGET_DEFAULT_HEIGHT');
	
	DBMS_OUTPUT.PUT_LINE('DELETE PROVIDER_NAME DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='PROVIDER_NAME' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='PROVIDER_NAME');
	
	DBMS_OUTPUT.PUT_LINE('DELETE PROVIDER_VERSION DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='PROVIDER_VERSION' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='PROVIDER_VERSION');
	
	DBMS_OUTPUT.PUT_LINE('DELETE PROVIDER_ASSET_ROOT DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='PROVIDER_ASSET_ROOT' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='PROVIDER_ASSET_ROOT');
	
	DBMS_OUTPUT.PUT_LINE('DELETE DASHBOARD_INELIGIBLE DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_SEARCH_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_SEARCH_PARAMS T1 WHERE T1.NAME ='DASHBOARD_INELIGIBLE' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.SEARCH_ID IN (
		SELECT T2.SEARCH_ID FROM EMS_ANALYTICS_SEARCH T2 LEFT JOIN EMS_ANALYTICS_SEARCH_PARAMS T3 ON(T2.SEARCH_ID =T3.SEARCH_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='DASHBOARD_INELIGIBLE');
	
	--delete data in EMS_ANALYTICS_CATEGORY_PARAMS table
	DBMS_OUTPUT.PUT_LINE('DELETE DASHBOARD_INELIGIBLE DATA FOR TENANT:&TENANT_ID EMS_ANALYTICS_CATEGORY_PARAMS TABLE');
	DELETE FROM EMS_ANALYTICS_CATEGORY_PARAMS T1 WHERE T1.NAME ='DASHBOARD_INELIGIBLE' AND T1.TENANT_ID  ='&TENANT_ID' AND T1.CATEGORY_ID IN (
		SELECT T2.CATEGORY_ID FROM EMS_ANALYTICS_CATEGORY T2 LEFT JOIN EMS_ANALYTICS_CATEGORY_PARAMS T3 ON(T2.CATEGORY_ID =T3.CATEGORY_ID AND T2.TENANT_ID=T3.TENANT_ID AND T2.TENANT_ID='&TENANT_ID') WHERE T3.NAME='DASHBOARD_INELIGIBLE');
	
	ELSE
		DBMS_OUTPUT.PUT_LINE('Schema object: DATA HAS BEEN DELELED IN EMS_ANALYTICS_SEARCH_PARAMS AND EMS_ANALYTICS_CATEGORY_PARAMS FOR TENANT:&TENANT_ID,NO FURTHER ACTION IS NEEDED!');
	END IF;
	
	COMMIT;
	
	EXCEPTION
	  WHEN OTHERS THEN
		ROLLBACK;
		DBMS_OUTPUT.PUT_LINE('Failed to merge rows for tenant:&TENANT_ID from EMS_ANALYTICS_CATEGORY_PARAMS,EMS_ANALYTICS_SEARCH_PARAMS to EMS_ANALYTICS_CATEGORY,EMS_ANALYTICS_SEARCH table due to '||SQLERRM);
		RAISE;

END;
/