Rem
Rem    DDL change during upgrade
Rem    MODIFIED   (MM/DD/YY)
Rem    GUOCHEN   09/26/2017 - created
Rem
Rem

SET FEEDBACK ON
SET SERVEROUTPUT ON
DECLARE
  v_count     INTEGER;
BEGIN
  --add new column 'EMS_ANALYTICS_SEARCH.FEDERATION_SUPPORTED'
  SELECT COUNT(*) INTO v_count FROM user_tab_columns WHERE table_name='EMS_ANALYTICS_SEARCH' AND column_name='FEDERATION_SUPPORTED';
  IF v_count=0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH ADD "FEDERATION_SUPPORTED" NUMBER(1,0) DEFAULT(0) NOT NULL';
  ELSE
    DBMS_OUTPUT.PUT_LINE('Schema object: EMS_ANALYTICS_SEARCH.FEDERATION_SUPPORTED exists already, no change is needed');
  END IF;

  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    DBMS_OUTPUT.PUT_LINE('>>>SSF DDL ERROR<<<');
    DBMS_OUTPUT.PUT_LINE('Failed to run the sql for federated dashboard support due to: '||SQLERRM);
    RAISE;
END;
/

--OMCSQ048: Indexes with a tenant_id key column must list it first
DECLARE
  v_count_index        INTEGER;
  v_count_position     INTEGER;
BEGIN
  
  -- EMS_ANALYTICS_LAST_ACCESS
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_LAST_ACCESS_PK' AND table_name = 'EMS_ANALYTICS_LAST_ACCESS';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_LAST_ACCESS_PK' AND table_name = 'EMS_ANALYTICS_LAST_ACCESS' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_LAST_ACCESS_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_LAST_ACCESS_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_LAST_ACCESS DROP CONSTRAINT EMS_ANALYTICS_LAST_ACCESS_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_LAST_ACCESS ADD CONSTRAINT EMS_ANALYTICS_LAST_ACCESS_PK PRIMARY KEY(TENANT_ID,OBJECT_ID,ACCESSED_BY,OBJECT_TYPE)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_LAST_ACCESS_PK successfully!');
  END IF;
  
  -- EMS_ANALYTICS_FOLDERS
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_FOLDERS_PK' AND table_name = 'EMS_ANALYTICS_FOLDERS';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_FOLDERS_PK' AND table_name = 'EMS_ANALYTICS_FOLDERS' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_FOLDERS_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_FOLDERS_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_FOLDERS DROP CONSTRAINT EMS_ANALYTICS_FOLDERS_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_FOLDERS ADD CONSTRAINT EMS_ANALYTICS_FOLDERS_PK PRIMARY KEY (TENANT_ID,FOLDER_ID)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_FOLDERS_PK successfully!');
  END IF;
  
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_FOLDERS_U01' AND table_name = 'EMS_ANALYTICS_FOLDERS';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_FOLDERS_U01' AND table_name = 'EMS_ANALYTICS_FOLDERS' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_FOLDERS_U01 does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_FOLDERS_U01');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_FOLDERS DROP CONSTRAINT EMS_ANALYTICS_FOLDERS_U01';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_FOLDERS ADD CONSTRAINT EMS_ANALYTICS_FOLDERS_U01 UNIQUE (TENANT_ID,NAME,OWNER,PARENT_ID,DELETED)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_FOLDERS_U01 successfully!');
  END IF;
  
  -- EMS_ANALYTICS_CATEGORY
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_CATEGORY_PK' AND table_name = 'EMS_ANALYTICS_CATEGORY';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_CATEGORY_PK' AND table_name = 'EMS_ANALYTICS_CATEGORY' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_CATEGORY_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_CATEGORY_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY DROP CONSTRAINT EMS_ANALYTICS_CATEGORY_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY ADD CONSTRAINT EMS_ANALYTICS_CATEGORY_PK PRIMARY KEY (TENANT_ID,CATEGORY_ID)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_CATEGORY_PK successfully!');
  END IF;
  
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYICS_CATEGORY_U01' AND table_name = 'EMS_ANALYTICS_CATEGORY';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYICS_CATEGORY_U01' AND table_name = 'EMS_ANALYTICS_CATEGORY' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYICS_CATEGORY_U01 does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYICS_CATEGORY_U01');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY DROP CONSTRAINT EMS_ANALYICS_CATEGORY_U01';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY ADD CONSTRAINT EMS_ANALYICS_CATEGORY_U01 UNIQUE (TENANT_ID,NAME,OWNER,DELETED)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYICS_CATEGORY_U01 successfully!');
  END IF;
  
  -- EMS_ANALYTICS_CATEGORY_PARAMS
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_CAT_PARAMS_PK' AND table_name = 'EMS_ANALYTICS_CATEGORY_PARAMS';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_CAT_PARAMS_PK' AND table_name = 'EMS_ANALYTICS_CATEGORY_PARAMS' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_CAT_PARAMS_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_CAT_PARAMS_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY_PARAMS DROP CONSTRAINT EMS_ANALYTICS_CAT_PARAMS_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_CATEGORY_PARAMS ADD CONSTRAINT EMS_ANALYTICS_CAT_PARAMS_PK PRIMARY KEY (TENANT_ID,CATEGORY_ID,NAME)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_CAT_PARAMS_PK successfully!');
  END IF;
  
  -- EMS_ANALYTICS_SEARCH
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_SEARCH_PK' AND table_name = 'EMS_ANALYTICS_SEARCH';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_SEARCH_PK' AND table_name = 'EMS_ANALYTICS_SEARCH' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_SEARCH_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_SEARCH_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH DROP CONSTRAINT EMS_ANALYTICS_SEARCH_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH ADD CONSTRAINT EMS_ANALYTICS_SEARCH_PK PRIMARY KEY (TENANT_ID,SEARCH_ID)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_SEARCH_PK successfully!');
  END IF;
  
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_SEARCH_U01' AND table_name = 'EMS_ANALYTICS_SEARCH';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_SEARCH_U01' AND table_name = 'EMS_ANALYTICS_SEARCH' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_SEARCH_U01 does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_SEARCH_U01');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH DROP CONSTRAINT EMS_ANALYTICS_SEARCH_U01';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH ADD CONSTRAINT EMS_ANALYTICS_SEARCH_U01 UNIQUE (TENANT_ID,NAME,CATEGORY_ID,FOLDER_ID,OWNER,DELETED)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_SEARCH_U01 successfully!');
  END IF;
  
  -- EMS_ANALYTICS_SEARCH_PARAMS
  SELECT COUNT(1) INTO v_count_index FROM user_constraints WHERE constraint_name = 'EMS_ANALYTICS_SEARCH_PROPS_PK' AND table_name = 'EMS_ANALYTICS_SEARCH_PARAMS';
  SELECT COUNT(1) INTO v_count_position FROM all_ind_columns WHERE INDEX_NAME = 'EMS_ANALYTICS_SEARCH_PROPS_PK' AND table_name = 'EMS_ANALYTICS_SEARCH_PARAMS' AND COLUMN_NAME = 'TENANT_ID' AND COLUMN_POSITION = 1;
  IF v_count_index=0 THEN
    DBMS_OUTPUT.PUT_LINE('constraint EMS_ANALYTICS_SEARCH_PROPS_PK does not exist');
  ELSIF  v_count_position=1 THEN
    DBMS_OUTPUT.PUT_LINE('TENANT_ID has been already listed first in EMS_ANALYTICS_SEARCH_PROPS_PK');
  ELSE
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH_PARAMS DROP CONSTRAINT EMS_ANALYTICS_SEARCH_PROPS_PK';
    EXECUTE IMMEDIATE 'ALTER TABLE EMS_ANALYTICS_SEARCH_PARAMS ADD CONSTRAINT EMS_ANALYTICS_SEARCH_PROPS_PK PRIMARY KEY (TENANT_ID,SEARCH_ID,NAME)';
    DBMS_OUTPUT.PUT_LINE('TENANT_ID is listed first in EMS_ANALYTICS_SEARCH_PROPS_PK successfully!');
  END IF;
  
  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    DBMS_OUTPUT.PUT_LINE('>>>SSF DDL ERROR<<<');
    DBMS_OUTPUT.PUT_LINE('Failed to rebuild index due to error '||SQLERRM);
    RAISE;
END;
/

