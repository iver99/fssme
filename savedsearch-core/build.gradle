import org.apache.tools.ant.filters.ReplaceTokens
import java.text.SimpleDateFormat
import java.util.Date
apply from: 'test.gradle'


dfversion = project.ext.getServiceVersion('SavedSearchService')
def versionPathElement = dfversion + "-"+ new SimpleDateFormat("yyMMdd.HHmmss").format(new Date())

/*
	NOTE: 
		PUBLISHING ==> We use artifactoryPublish to publish artifacts, in publications block
				we publish...
					1. integTestJar (this is the JAR containing test code)
					2. savedsearch-core jar itself
				The "group" of both these JARs is NOT com.oracle.emaas.emcpssf - instead 
				there's a "test" added to it - Hudson jobs prohibit publishing with root group & 
				this allows for clear separation of artifacts. 
		RESOLUTION ==> All JARs are produced & published via hudson (or otherwise) job, thus to resolve 
									 jar version correctly, we use a variable (not managed by these gradle scripts) called
									 REPO_BID - you will find we do NOT set version to these artifacts, this is intentional 
									 this allows build jobs to set version & resolve later
*/
 tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
publishing.publications {
    integTest(MavenPublication) {
			setArtifactId(project.name + '-' + integTestJar.appendix)
			setGroupId("${publishGroup}")
			artifact integTestJar.archivePath
    }
    thisJarPublication(MavenPublication) {
			from project.components.java
			setGroupId("${publishGroup}")
    }
}

artifactoryPublish {
	publications('integTest')
	publications('thisJarPublication')
}

build.dependsOn integTestJar

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources.srcDirs = ['src/main/java', 'src/main/resources']
	}
	test{
		java {
			srcDirs = ['src/integTest/java']
		}
		resources.srcDirs = ['src/integTest/java']
	}
}

processResources {
    from('src/main/resources') {
        include '*.properties', '*.xml'
        filter(ReplaceTokens, tokens: [version : versionPathElement])
    }
}

task runDEVTestSuite(type: Test){
        useTestNG(){        
        useDefaultListeners = true
        outputDirectory = file("$buildDir/testngoutput")
        suites file('savedsearch-core_testng_suite.xml')
        }
}

test {
        useTestNG()
        {
                //We explicity include only tests annotate as s1 or s2 - they are "short-running" tests,
                //if you wish to run ALL tests within this projet - remove following.
                includeGroups 's1' ,'s2'
        }
}

def regLookupClientVer= getDependentSdkVersion('com.oracle.emaas.emcpsm', 'registry-lookup-client', '1.0.0+')
def regClientVer= getDependentSdkVersion('com.oracle.emaas.emcpsm', 'registry-client', '1.0.0+')
dependencies {
	compile project(':savedsearch-entities'){transitive = false}
	testRuntime(group: 'com.oracle.jdbc', name: 'ojdbc6', version: '12.1.0.1.0'){transitive = false}
	compile(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1'){transitive = false}
	compile(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1'){transitive = false}
	compile(group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.0.5'){transitive = false}
	compile(group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2') {transitive = false}
	compile(group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2'){transitive = false}
	compile(group: 'org.codehaus.jettison', name: 'jettison', version: '1.3.4'){transitive = false}
	compile(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'){transitive = false}
	compile(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'){transitive = false}
	compile(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2'){transitive = false}
	compile(group: 'com.sun.jersey', name: 'jersey-core', version: '1.17.1') {transitive=false}
	compile(group: 'com.sun.jersey', name: 'jersey-client', version: '1.17'){transitive = false}
	compile(group: 'org.apache.httpcomponents', name:'httpcore', version:'4.3'){transitive = false}
	compile(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'){transitive = false}
	compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-client', version: regClientVer)
	compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-lookup-client', version: regLookupClientVer)
	compile(group: 'com.oracle.emaas', name:'emaas-platform-tenant-sdk', version:'0.2')  { transitive = false }
	compile(group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2') {transitive = false}
    testCompile(group: 'org.jmockit', name: 'jmockit', version: '1.19') { transitive = false }
	compile configurations.testNG
	compile configurations.webdriver
	compile configurations.restAssured
}
