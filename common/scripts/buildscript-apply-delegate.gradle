/* Copyright (c) 2015, 2016 Oracle and/or its affiliates. All rights reserved.*/
 
/*
   DESCRIPTION
     This is script buildscript-apply-delegate.gradle.
 
     --------------------------------------------------------------------------
     The Common Build Framework (CBF) buildscript{} calling chain
     starts like this:
 
     In a rootProject build.gradle script, buildscript{...} applies script
     $project.commonBranchTopDir/common/scripts/buildscript-apply-delegate.gradle
     which finds and applies script
     $project.PUB_DIR_MASTER/scripts/buildscript-delegate.gradle
     (or the same file from orahub when the remote and local CBF dirs
     are not accessible),
     which finds pubDir and applies $pubDir/scripts/buildscript.gradle.
     --------------------------------------------------------------------------
 
     Prerequisites to calling this buildscript-apply-delegate.gradle script:
     -- project property commonBranchTopDir must have been set by buildscript{}
        in the root project build.gradle or other main gradle script
 
     This script sets properties:
       PUB_DIR_MASTER -- caller may override
       PUB_LOCAL_EMDI_MASTER
       PUB_REMOTE_EMDI_MASTER
     Then it finds and applies buildscript-delegate.gradle.
 
     Any PUB_DIR* override, such as PUB_DIR_MASTER, may be set as a property
     or env variable.
 
     Env variables EMAAS_LOCAL_SCRATCH_BASE and EMAAS_DEV_INFRA_GENERIC_EMDEV
     override the builtin property defaults.
     These properties provide the basis for setting the properties
     PUB_LOCAL_EMDI_MASTER and PUB_REMOTE_EMDI_MASTER.
 
     --------------------------------------------------------------------------
 
     Overview of script buildscript-delegate.gradle:
 
     First the local CBF pub scripts are installed or refreshed to PUB_DIR
     from PUB_DIR_MASTER.
     Special case: this PUB_DIR refresh is skipped for a farm job
     that does not set PUB_DIR or set PUB_DIR_RUN_FROM_INSTALL=1.
 
     The CBF local installation is available for anytime gradle --offline use
     after the first automatic installation by this script to the local machine
     during the configuration phase when any gradle task is run,
     such as "gradle projects".
 
       -- PUB_DIR (local CBF installation) default: /scratch/<user>/.emdi/pub
       -- PUB_DIR_MASTER default: remote master CBF location if accessible,
          otherwise default local CBF installation
 
     After PUB_DIR is potentially refreshed,
     the CBF pub scripts are by default run from PUB_DIR_MASTER,
     except project emdi (which owns CBF) runs from emdi/pub.
 
     When PUB_DIR_RUN_FROM_INSTALL=1, CBF scripts are run from PUB_DIR
     (local CBF installation) instead of from PUB_DIR_MASTER.
 
     An install or refresh to PUB_DIR from PUB_DIR_MASTER is done when:
       PUB_DIR_MASTER exists
       and PUB_DIR is not equal to PUB_DIR_MASTER
       and PUB_DIR is not the same as <pubDirThisProject> (branch protection)
       and (not a farm job or PUB_DIR is set or PUB_DIR_RUN_FROM_INSTALL=1)
       and PUB_DIR_REFRESH days (default 7) have elapsed since the last update
         PUB_DIR_REFRESH < 0  => force refresh each time
         PUB_DIR_REFRESH == 0 => never refresh
         PUB_DIR_REFRESH > 0  => refresh every this many days
 
     --------------------------------------------------------------------------
 
   MODIFIED MM/DD/YY
   skuchero 09/01/16 - call waitForProcessOutput for sh commands
   skuchero 08/09/16 - download delegate from orahub when no PUB_DIR_MASTER
   skuchero 04/12/16 - tweak code style
   skuchero 03/10/16 - set PUB_REMOTE_EMDI_MASTER to a dir path or empty string
   skuchero 02/21/16 - simplify header comment user doc for PUB_DIR* props
   skuchero 02/17/16 - improve exception message
   skuchero 12/17/15 - offline and Windows improvements
   skuchero 08/10/15 - prop takes precedence over env var of same name
   skuchero 05/12/15 - created
 */
//-----------------------------------------------------------------------------
 
//-----------------------------------------------------------------------------
// Download CBF delegate script from orahub to a temporary file.
//
// This is called as a last resort when PUB_DIR_MASTER does not exist,
// even for the "gradle --offline" case when NFS dirs are not to be accessed.
//
// After calling this method and processing the output,
// the caller should call file(downloadDelegateOut.tempDir).deleteDir().
//
// Input arg delegateRelPath normally has the value
// "pub/scripts/buildscript-delegate.gradle".
//
// Return downloadDelegateOut map:
//   downloadDelegateOut.tempDir -- temporary dir path
//   downloadDelegateOut.tempDelegate -- temporary delegate script path
//   downloadDelegateOut.orahubMsg -- error message if orahub command failed
//
def downloadDelegate(delegateRelPath) { // private
 
  def downloadDelegateOut = [:]
  downloadDelegateOut.tempDir = java.nio.file.Files.createTempDirectory("cbf-delegate-").toString()
  downloadDelegateOut.tempDelegate = "$downloadDelegateOut.tempDir/$delegateRelPath"
  downloadDelegateOut.orahubMsg = ''
  //
  // orahub emdi branch matches the default remote PUB_DIR_MASTER code
  def orahubBranch = 'master'
  def orahubRepo = 'emdi'
  def command =
    "cd '$project.rootDir' || exit 1; " +
    "git archive " +
      "--format=tar " +
      "--remote='git@orahub.oraclecorp.com:emaas/${orahubRepo}.git' " +
      "-- " +
      "'$orahubBranch' " +
      "'$delegateRelPath' " +
      "| (cd '$downloadDelegateOut.tempDir' && tar -xf -)"
  //
  def stdout = new StringBuilder(); def stderr = new StringBuilder(); def exitCode = 1
  try {
    def proc = new ProcessBuilder("sh", "-c", command).start()
    proc.waitForProcessOutput(stdout, stderr); exitCode = proc.exitValue()
  } catch (Exception e) { stderr << e.message }
  if (exitCode) {
    // filter for useful error output from this specific command
    def commandErrors = "$stderr".split("\\n").findAll {it =~ ~/^\S+:|[Cc]annot/}
    downloadDelegateOut.orahubMsg =
      "Failed to download $orahubRepo/$delegateRelPath from orahub\n" +
      "[Command] sh -c \"$command\"\n" + "[Error] " + commandErrors.join("\n        ") + "\n\n"
  }
 
  downloadDelegateOut
}
 
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// MAIN CODE
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
 
// property must be set by buildscript{} code prior to applying this script
assert project.hasProperty('commonBranchTopDir')
 
def isUnix = ! System.getProperty('os.name').toLowerCase().startsWith('windows')
def isOffline = project.gradle.startParameter.isOffline()
 
// set PUB_LOCAL_EMDI_MASTER and PUB_REMOTE_EMDI_MASTER
//
def localPrefix = System.env.EMAAS_LOCAL_SCRATCH_BASE ?:
  (isUnix ? "/scratch" : "C:/scratch")
def localUser = isUnix ? "$System.env.USER" : "$System.env.USERNAME"
project.ext.PUB_LOCAL_EMDI_MASTER = "$localPrefix/$localUser/.emdi"
//
project.ext.PUB_REMOTE_EMDI_MASTER = ''
def remoteMsg = ''
if ( ! isOffline) {
  def remotePrefix = System.env.EMAAS_DEV_INFRA_GENERIC_EMDEV ?:
    (isUnix ? "/usr/dev_infra/generic/emdev" : "C:/ADE/dev_infra_generic/emdev")
  // must not quote sh script pathname
  def command = "sh $remotePrefix/pub/getStorageServerLoc.sh -base"
  def stdout = new StringBuilder(); def stderr = new StringBuilder(); def exitCode = 1
  try {
    def proc = new ProcessBuilder("sh", "-c", command).start()
    proc.waitForProcessOutput(stdout, stderr); exitCode = proc.exitValue()
  } catch (Exception e) { stderr << e.message }
  if (exitCode) {
    remoteMsg += "Failed to find the default remote PUB_DIR_MASTER directory\n" +
      "[Command] sh -c \"$command\"\n" + "[Error] $stderr\n\n"
  } else {
    // set even if this standard development remote dir is not accessible
    // -- buildscript-delegate.gradle may depend on this behavior
    project.ext.PUB_REMOTE_EMDI_MASTER = "$stdout".trim() + "/emdi"
    if ( ! file(project.PUB_REMOTE_EMDI_MASTER).isDirectory()) {
      remoteMsg += "Default remote PUB_DIR_MASTER directory does not exist: $project.PUB_REMOTE_EMDI_MASTER\n\n"
    }
  }
}
 
// set PUB_DIR_MASTER
//
// Note that an emdi project dir is not by default considered stable
// enough to install/update to a pubDir shared between projects,
// so PUB_DIR_MASTER is never set by default to a project branch dir.
//
if ( ! project.hasProperty('PUB_DIR_MASTER') && System.env.PUB_DIR_MASTER) {
  project.ext.PUB_DIR_MASTER = System.env.PUB_DIR_MASTER
}
if ( ! project.hasProperty('PUB_DIR_MASTER')) {
  def isRemotePubDirMasterAvailable = (
       ! isOffline
    && project.PUB_REMOTE_EMDI_MASTER // not empty string
    && file("$project.PUB_REMOTE_EMDI_MASTER/pub").isDirectory() // dir exists
    )
  project.ext.PUB_DIR_MASTER = isRemotePubDirMasterAvailable ?
    "$project.PUB_REMOTE_EMDI_MASTER/pub" :
    "$project.PUB_LOCAL_EMDI_MASTER/pub"
}
 
// apply buildscript-delegate.gradle
//
def delegateRelPath = "pub/scripts/buildscript-delegate.gradle"
def ourDelegate = "$project.commonBranchTopDir/$delegateRelPath"
if (file(ourDelegate).exists()) {
  // emdi project owns the CBF pub scripts
  apply from: ourDelegate
} else {
  // non-emdi project
  if (file(project.PUB_DIR_MASTER).isDirectory()) {
    apply from: "$project.PUB_DIR_MASTER/scripts/buildscript-delegate.gradle"
  } else {
    // download CBF delegate script from orahub as a last resort
    // when PUB_DIR_MASTER does not exist, even for the "gradle --offline" case
    // when NFS dirs are not to be accessed
    //
    def downloadDelegateOut = downloadDelegate(delegateRelPath)
    def orahubMsg = downloadDelegateOut.orahubMsg
    if ( ! orahubMsg) {
      apply from: downloadDelegateOut.tempDelegate
    }
    file(downloadDelegateOut.tempDir).deleteDir() // delete recursively
    //
    if (orahubMsg) {
      // throw helpful exception message
      //
      def offlineMsg = isOffline ?
        "Install CBF scripts locally for later offline use " +
          "by running \"gradle projects\" (or any gradle task) when " +
          "orahub.oraclecorp.com is accessible\n\n"
        : ''
      def windowsMsg = ( ! isUnix) ?
        "For Windows OMC initial setup requirements, see " +
          "https://confluence.oraclecorp.com/confluence/display/DevTools/Windows+System+Setup+Instructions+for+OMC+Development+or+Hudson+Build\n\n"
        : ''
      // blank line between different messages
      throw new GradleException(
        "[ERROR][CBF][$project.name] " +
        "PUB_DIR_MASTER directory does not exist: $project.PUB_DIR_MASTER\n\n" +
        "$remoteMsg" +
        "$orahubMsg" +
        "$offlineMsg" +
        "$windowsMsg" +
        "See also https://confluence.oraclecorp.com/confluence/display/DevTools/Essential+File+Templates+for+the+CBF#EssentialFileTemplatesfortheCBF-common/scripts/buildscript-apply-delegate.gradle--emaasprojecttemplatecode")
    }
  }
}
