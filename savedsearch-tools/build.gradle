apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'artifactory-publish'
apply from: 'test.gradle'
apply plugin: 'TestInfraPlugin'
//jar.archiveName='UpdateSavedSearch.jar'


task runUpdateSearchUtilTestSuite(type: Test){
        useTestNG(){
        dependsOn ':savedsearch-tools:jar'
        useDefaultListeners = true
        outputDirectory = file("$buildDir/testngoutput")
        suites file('savedsearchutil_testng_suite.xml')
        }
}

sourceSets {
                test{
                    java {
                              srcDirs = ['src/test/java']
                    }
                    resources.srcDirs = ['src/test/java']
                }
			}

def regLookupClientVer= getDependentSdkVersion('com.oracle.emaas.emcpsm', 'registry-lookup-client', '1.+')
def regClientVer= getDependentSdkVersion('com.oracle.emaas.emcpsm', 'registry-client', '1.+')
dependencies {
	compile(group: 'org.apache.commons', name:'commons-lang3', version:'3.1'){transitive = false}
        compile(group: 'org.hamcrest', name:'hamcrest-core', version: '1.3'){transitive = false}
        compile(group: 'org.apache.httpcomponents', name:'httpclient', version:'4.3.1'){transitive = false}
        compile(group: 'org.apache.httpcomponents', name:'httpcore', version:'4.3'){transitive = false}
        compile(group: 'org.apache.httpcomponents', name:'httpmime', version:'4.3.1'){transitive = false}
        compile(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'){transitive = false}
        compile(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'){transitive = false}

        compile(group: 'org.codehaus.jettison', name: 'jettison', version: '1.3.4'){transitive = false}
        compile(group: 'log4j', name: 'log4j', version: '1.2.16'){transitive = false}
    compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-client', version: regClientVer){transitive = false}
        compile(group: 'com.oracle.emaas.emcpsm', name: 'registry-lookup-client', version: regLookupClientVer){transitive = false}
        compile(group: 'org.codehaus.groovy', name:'groovy-all', version:'2.2.1'){transitive = false}
    testCompile(group: 'org.jmockit', name: 'jmockit', version: '1.19') { transitive = false }
        
	compile configurations.restAssured
	compile configurations.testNG
	compile configurations.webdriver
}


version = '0.1'
jar {
            manifest
             {
            	attributes("Manifest-Version"       : "1.0",                
                "Main-Class"             : "oracle.sysman.emSDK.emaas.platform.updatesavedsearch.UpdateSavedSearch",
                "Class-Path"             :  "."
           				  )
            }   
           
       from 
       {
	        configurations.runtime.collect 
	        {
	            it.isDirectory() ? it : zipTree(it)
	        }
        }
    
     from('src/main/java')  
     {
        include 'log4j_ssf.properties'
     }
     
     from('src/main/java')  
     {
        include 'help.txt'
     }
    
    /* from('src/integTest/java/oracle/sysman/emSDK/emaas/platform/updatesearch/test')
     {
        include 'Search.xml'
     }
*/
}


repositories {
    /* Looks into local maven repository for artifacts */
    mavenLocal()
    maven {
        url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
    }
}
/*publishing {
    publications {
        integTest(MavenPublication) {
            setArtifactId(project.name + '-' + integTestJar.appendix)
            artifact integTestJar.archivePath
            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.lrgConfig.getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
    repositories {
        maven {
            url "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
            credentials {
                username = "${artifactory_user}"
                password =  "${artifactory_password}"
            }
        }
    }
}    
buildscript {
    repositories {
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}"
        }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'TestInfraPlugin', version: "${testinfraVersion}", transitive: true
    }
}*/
